C++ :

class Solution {
public:
    int largestPerimeter(vector<int>& nums) {
        sort(nums.begin(), nums.end());
        for(int i = nums.size()-3; i >= 0; i--)
        {
            if(nums[i] + nums[i+1] > nums[i+2])
            {
                return nums[i] + nums[i+1] + nums[i+2];
            }
        }
        return 0;
    }
};


JAVA: 

class Solution {
    public int largestPerimeter(int[] nums) {
        Arrays.sort(nums);
        for(int i = nums.length - 3; i >= 0; i--)
        {
            if(nums[i] + nums[i+1] > nums[i+2])
            return nums[i] + nums[i+1] + nums[i+2];
        }
        return 0;
    }
}


PYTHON: 

class Solution(object):
    def largestPerimeter(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        nums.sort()
        for i in xrange(len (nums)-3, -1, -1):
            if nums[i] + nums[i+1] > nums[i+2]:
                return nums[i]+ nums[i+1] + nums[i+2]

        return 0
